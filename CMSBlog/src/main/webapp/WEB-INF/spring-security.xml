<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->



<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <beans:bean id="webexpressionHandler" 
                class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
    
    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    
    <http pattern="/login" security="none" />
    <http pattern="/css/**" security="none" />
    <http pattern="/js/**" security="none" />
    <http pattern="/fonts/**" security="none" />
    
    <http auto-config="true">
        <form-login login-processing-url="/j_spring_security_check"
                    login-page="/login"
                    authentication-failure-url="/login?login_error=1"/>

        <intercept-url pattern="/"
                       access="IS_AUTHENTICATED_ANONYMOUSLY"/>     
        <intercept-url pattern="/secureIndex.html" 
                       access="ROLE_USER"/>
        <intercept-url pattern="/content" 
                       access="ROLE_USER"/>
        <intercept-url pattern="/admin" 
                       access="ROLE_ADMIN"/>        
        <intercept-url pattern="/**"
                       access="IS_AUTHENTICATED_ANONYMOUSLY"/> 
    </http>
    
    
<!--    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="user" 
                      password="user" 
                      authorities="ROLE_USER" />
                <user name="admin" 
                      password="admin" 
                      authorities="ROLE_USER, ROLE_ADMIN" />
            </user-service>
        </authentication-provider>
    </authentication-manager>-->
    
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="encoder"/>
            <jdbc-user-service id="userService"
                               data-source-ref="dataSource"
                               users-by-username-query="SELECT name,password,userId FROM `user` WHERE name=?"
                               authorities-by-username-query=
                                    "SELECT `user`.`name`, role.`name` 
                                     FROM `user` 
                                     INNER JOIN userrole ON `user`.userid = userrole.userid 
                                     INNER JOIN role ON userrole.roleid = role.roleid
                                     WHERE `user`.`name` = ?" 
            />
        </authentication-provider>
    </authentication-manager>
</beans:beans>